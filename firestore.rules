
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =====================================================================
    // Helper Functions & Variables (Single Source of Truth)
    // =====================================================================

    // Fungsi ini adalah jantung keamanan kita.
    // Ia dengan aman memeriksa apakah pengguna yang sedang login memiliki peran 'Management'.
    // Kuncinya adalah 'exists(UserDocPath)' yang mencegah error jika dokumen pengguna belum ada.
    function isManagement() {
      let UserDocPath = /databases/$(database)/documents/users/$(request.auth.uid);
      return request.auth != null && exists(UserDocPath) && get(UserDocPath).data.position == 'Management';
    }

    // =====================================================================
    // Collection-Specific Rules
    // =====================================================================

    // --- Users Collection: Profil & Peran ---
    match /users/{userId} {
      // Semua pengguna yang login bisa membaca profil lain (penting untuk daftar pengguna & chat).
      allow read: if request.auth != null;
      // Pengguna hanya bisa membuat atau mengubah data mereka sendiri.
      allow write: if request.auth.uid == userId;
    }

    // --- User Activity Collection (Data Paling Sensitif) ---
    match /user-activity/{activityId} {
      // **PERATURAN KUNCI**: Hanya 'Management' yang bisa membaca (get/list) koleksi ini.
      // Ini adalah aturan yang secara langsung mencegah error `permission-denied`
      // untuk peran lain saat mereka membuka aplikasi.
      allow read: if isManagement();

      // Pengguna hanya bisa membuat catatan aktivitas untuk diri mereka sendiri saat login.
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // --- Products & Bundles Collections: Data Bisnis ---
    match /products/{docId} {
      allow read: if request.auth != null;
      allow write: if isManagement(); // Hanya 'Management' yang bisa membuat, mengubah, menghapus.
    }
    match /bundles/{bundleId} {
      allow read: if request.auth != null;
      allow write: if isManagement();
    }

    // --- Stock History Collection: Log Umum ---
    match /stock_history/{historyId} {
      // Semua peran bisa menambah stok, jadi semua yang login bisa membuat & membaca riwayat.
      allow read, create: if request.auth != null;
    }

    // --- Announcements Collection & Replies ---
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if isManagement(); // Hanya 'Management' yang bisa membuat/mengubah/menghapus pengumuman.

      match /replies/{replyId} {
        // Siapa pun yang login bisa membalas pengumuman.
        allow read, create: if request.auth != null;
      }
    }

    // --- Chats Collection: Komunikasi Pribadi ---
    match /chats/{chatId} {
      // Anda hanya bisa membaca atau mengubah data chat (misal: lastMessageTimestamp) jika Anda adalah peserta.
      // 'resource.data' merujuk pada dokumen yang sudah ada di database.
      allow read, update: if request.auth.uid in resource.data.participants;
      // Anda hanya bisa membuat chat baru jika ID Anda termasuk dalam daftar peserta.
      // 'request.resource.data' merujuk pada dokumen yang AKAN dibuat.
      allow create: if request.auth.uid in request.resource.data.participants;

      match /messages/{messageId} {
        // Anda hanya bisa membaca atau mengirim pesan dalam sebuah chat jika Anda adalah pesertanya.
        function isChatParticipant() {
          return request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        }
        allow read: if isChatParticipant();
        allow create: if isChatParticipant() && request.auth.uid == request.resource.data.senderId;
      }
    }
  }
}
