
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions (Corrected Syntax)
    // =================================

    // Is the logged-in user a 'Management' user?
    // This is the SAFE version. It checks for login, document existence,
    // and then the position in a single, safe boolean expression.
    function isManagement() {
      let userDocPath = /databases/$(database)/documents/users/$(request.auth.uid);
      return request.auth != null &&
             exists(userDocPath) &&
             get(userDocPath).data.position == 'Management';
    }

    // Is the logged-in user a participant of a specific chat?
    function isChatParticipant(chatId) {
      let chatDocPath = /databases/$(database)/documents/chats/$(chatId);
      return request.auth != null &&
             exists(chatDocPath) &&
             request.auth.uid in get(chatDocPath).data.participants;
    }

    // =================================
    // Collection Rules (Complete & Verified)
    // =================================

    // --- Users Collection ---
    // Users can read any profile (for chat list, etc.) but only update their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // --- Products & Bundles Collections ---
    // Anyone can read, only Management can write/delete.
    match /products/{docId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isManagement();
    }
    match /bundles/{docId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isManagement();
    }

    // --- Stock History Collection ---
    // Any authenticated user can create a stock history record (by updating stock).
    match /stock_history/{docId} {
      allow read, create: if request.auth != null;
    }

    // --- Announcements Collection ---
    // Anyone can read announcements and replies.
    // Only Management can create/edit/delete announcements.
    // Anyone can create replies.
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isManagement();

      match /replies/{replyId} {
        allow read, create: if request.auth != null;
      }
    }

    // --- User Activity Collection (Sensitive) ---
    // Only Management can read activity.
    // A user can only create their own activity log entry.
    match /user-activity/{activityId} {
      allow read: if isManagement();
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // --- Chats Collection (Private) ---
    match /chats/{chatId} {
      // Allow create if the user is one of the participants.
      // Allow read/update if the user is a participant.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      allow read, update: if isChatParticipant(chatId);
      
      match /messages/{messageId} {
        // Allow read if user is a participant.
        // Allow create if user is a participant AND the sender.
        allow read: if isChatParticipant(chatId);
        allow create: if isChatParticipant(chatId) && request.auth.uid == request.resource.data.senderId;
      }
    }
  }
}
