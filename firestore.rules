
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions (DEFINITIVE & SAFE)
    // =================================

    // The most important check. Is the user actually logged in?
    function isSignedIn() {
      return request.auth != null;
    }

    // Is the logged-in user the owner of the resource?
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Is the logged-in user a 'Management' user?
    // THIS IS NOW SAFE. It will not run if the user is not signed in.
    function isManagement() {
      if (!isSignedIn()) {
        return false;
      }
      let userDocPath = /databases/$(database)/documents/users/$(request.auth.uid);
      return exists(userDocPath) && get(userDocPath).data.position == 'Management';
    }

    // Is the logged-in user a participant of a specific chat?
    // THIS IS NOW SAFE.
    function isChatParticipant(chatId) {
      if (!isSignedIn()) {
        return false;
      }
      let chatDocPath = /databases/$(database)/documents/chats/$(chatId);
      return exists(chatDocPath) && request.auth.uid in get(chatDocPath).data.participants;
    }


    // =================================
    // Collection Rules (DEFINITIVE & SAFE)
    // =================================

    // --- Users Collection ---
    // Anyone signed in can read profiles.
    // Only the owner can create or update their own profile.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isOwner(userId);
    }

    // --- Products, Bundles, Announcements Collections ---
    // Anyone signed in can read.
    // Only 'Management' can write (create, update, delete).
    match /products/{docId} {
      allow read: if isSignedIn();
      allow write: if isManagement();
    }
    match /bundles/{docId} {
      allow read: if isSignedIn();
      allow write: if isManagement();
    }
    match /announcements/{announcementId} {
      allow read: if isSignedIn();
      allow write: if isManagement();

      // Replies: Anyone signed in can read and create replies.
      match /replies/{replyId} {
        allow read, create: if isSignedIn();
      }
    }

    // --- Stock History Collection ---
    // Anyone signed in can read or create history entries.
    match /stock_history/{docId} {
      allow read, create: if isSignedIn();
    }

    // --- User Activity Collection (Sensitive) ---
    // Only 'Management' can read activity logs.
    // A user can only create an activity log for themselves.
    match /user-activity/{activityId} {
      allow read: if isManagement();
      allow create: if isOwner(request.resource.data.userId);
    }

    // --- Chats Collection (Private) ---
    match /chats/{chatId} {
      // Read/Update allowed only for participants.
      allow read, update: if isChatParticipant(chatId);
      // Create is allowed if the user is one of the participants in the new chat document.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participants;

      match /messages/{messageId} {
        // Read/Create messages only allowed for participants.
        // Create also checks if the senderId matches the logged-in user.
        allow read: if isChatParticipant(chatId);
        allow create: if isChatParticipant(chatId) && isOwner(request.resource.data.senderId);
      }
    }
  }
}
